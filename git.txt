*Дополнительные команды для работы с консолью:
	-Очистить консоль clear
	-nano <file> редактировать содержимое файла
	-(+via <file>) для выхода ":q"
	-ll/ls вывести содержимое ветки в столбик/ в строчку
	-cat <file> вывести в консоль содержимое файла
	-создать файл echo 'content' >> new.file
	-cd D:/myProject перейти в папку
	-git checkout <hash> перейти к коммиту с таким хэшем

Проверка версии:
	$ git version (git version 2.33.0.windows.2)

Выполнение конфигурации:
	$ git config --global user.name Настя 
	$ git config --global user.email nai200315@gmail.com (задание имени пользователя и эл. почты)
	$ git config --list (вывод списка всех обнаруженных в данный момент параметров)

Инициализация репозитория:
	- создание
		$ cd D:/user/my_project (зайти в папку)
		$ git init (создать файлы, структуру git репозитория)
		$ echo >> 1.txt (создание файла)
	- клонирование
		$ git clone https://github.com/Nichiporchik-Nastya/-

Получение информации о статусе файлов репозитория:
	$ git status

Создание коммита:
	$ git add git.txt (добавление существующего файла в версионный контроль, подготовка) . - все файлы
	$ git commit -m 'message' (фиксирование изменений)

Настройка gitignore:
	пока неизвестно

Удаление и перемещение файлов:
	$ git rm test.txt
	$ git mv test.txt land/test.txt

Вывод сохранённых в репозитории версий:
	$ git log
	(первыми показываются самые свежие коммиты. Рядом с каждым коммитом
	указывается его контрольная сумма SHA-1, имя и электронная почта автора, дата создания и сообщение о
	фиксации)

Отмена внесённых изменений:
	$ git checkout -- git.txt
	(изменения, сделанные в файле после последнего коммита исчезают)

Команды reset и revert:
	-Отмена последнего коммита
		$ git revert HEAD --no-edit
		$ git revert <hash> --no-edit (отойти к коммиту с таким хэшем)	
	-Отменить добаление файла в стейдж
		$ git reset git.txt
		$ git reset --soft HEAD^1 (отменить последний коммит из истории)

Работа с ветками:
	- Создать ветку
		$ git branch new
	- Перейти в ветку
		$ git checkout new
	- Создать и перейти в ветку
		$ git checkout -b new
	- Удалить ветку
		$ git branch -d new
	- Посмотреть все ветки
		$ git branch
	- Переименовать ветку, в которой находишься
		$ git branch -m name
	- Слить с веткой после коммита
		$ git merge another
